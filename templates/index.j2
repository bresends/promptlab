{% extends "base.j2" %}

{% block title %}Prompt Templates{% endblock %}

{% block content %}
<div class="container mt-4">
    <div class="flex justify-between items-center mb-8">
        <h1 class="text-4xl font-bold text-base-950">Prompt Library</h1>
    </div>

    <!-- Search Bar -->
    <div class="mb-8">
        <div class="relative max-w-7xl">
            <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                <svg class="w-4 h-4 text-gray-500" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"/>
                </svg>
            </div>
            <input type="text" id="searchInput" class="block w-full p-4 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500" placeholder="Search prompts by name or tag..." autocomplete="off">
        </div>
    </div>

    {% if prompts_by_category %}
    {% for category, prompts in prompts_by_category.items() %}
    <div class="mb-12 category-section" data-category="{{ category }}">
        <h2 class="text-2xl font-semibold text-gray-800 mb-6 flex items-center category-header">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                stroke="currentColor" class="w-6 h-6 mr-2 text-base-950 mt-1">
                <path stroke-linecap="round" stroke-linejoin="round"
                    d="M2.25 12.75V12A2.25 2.25 0 014.5 9.75h15A2.25 2.25 0 0121.75 12v.75m-8.69-6.44l-2.12-2.12a1.5 1.5 0 00-1.061-.44H4.5A2.25 2.25 0 002.25 6v12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9a2.25 2.25 0 00-2.25-2.25h-5.379a1.5 1.5 0 01-1.06-.44z" />
            </svg>
            {{ category|title }}
        </h2>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {% for prompt in prompts %}
            {% set tags_list = prompt.frontmatter.tags.split(', ') if prompt.frontmatter.tags is string else prompt.frontmatter.tags %}
            <div
                class="prompt-card p-6 bg-white border border-gray-200 rounded-lg shadow-sm hover:shadow-md transition-shadow flex flex-col"
                data-name="{{ prompt.name|replace('_', ' ')|lower }}"
                data-tags="{{ tags_list|join(',')|lower if tags_list else '' }}"
                data-description="{{ prompt.description|lower if prompt.description else '' }}">

                <div class="flex items-start gap-2 mb-4">
                    {% if prompt.is_multi_step %}
                    <!-- Multi-step icon -->
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                        stroke="currentColor" class="w-6 h-6 text-blue-600 flex-shrink-0 mt-0.5">
                        <path stroke-linecap="round" stroke-linejoin="round"
                            d="M3.75 6A2.25 2.25 0 016 3.75h2.25A2.25 2.25 0 0110.5 6v2.25a2.25 2.25 0 01-2.25 2.25H6a2.25 2.25 0 01-2.25-2.25V6zM3.75 15.75A2.25 2.25 0 016 13.5h2.25a2.25 2.25 0 012.25 2.25V18a2.25 2.25 0 01-2.25 2.25H6A2.25 2.25 0 013.75 18v-2.25zM13.5 6a2.25 2.25 0 012.25-2.25H18A2.25 2.25 0 0120.25 6v2.25A2.25 2.25 0 0118 10.5h-2.25a2.25 2.25 0 01-2.25-2.25V6zM13.5 15.75a2.25 2.25 0 012.25-2.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-2.25A2.25 2.25 0 0113.5 18v-2.25z" />
                    </svg>
                    {% else %}
                    <!-- Regular prompt icon -->
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                        stroke="currentColor" class="w-6 h-6 text-base-800 flex-shrink-0 mt-0.5">
                        <path stroke-linecap="round" stroke-linejoin="round"
                            d="M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Z" />
                    </svg>
                    {% endif %}
                    <div class="flex-1">
                        <h3 class="text-lg font-semibold text-base-950">{{ prompt.name|replace('_', ' ')|title }}</h3>
                        {% if prompt.is_multi_step %}
                        <span class="inline-flex items-center px-2 py-1 text-xs font-medium text-blue-800 bg-blue-100 rounded-full mt-1">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 h-3 mr-1">
                                <path fill-rule="evenodd" d="M2 10a8 8 0 1116 0 8 8 0 01-16 0zm6.39-2.908a.75.75 0 01.766.027l3.5 2.25a.75.75 0 010 1.262l-3.5 2.25A.75.75 0 018 12.25v-4.5a.75.75 0 01.39-.658z" clip-rule="evenodd" />
                            </svg>
                            Multi-Step ({{ prompt.steps|length }} steps)
                        </span>
                        {% endif %}
                    </div>
                </div>

                <div class="flex-grow flex flex-col">
                    <div class="flex-grow">
                        {% if prompt.description %}
                        <p class="text-gray-600 py-1">{{ prompt.description }}</p>
                        {% endif %}
                    </div>

                    <div class="space-y-3 mt-4">
                        <div class="flex items-start">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                                stroke="currentColor" class="w-5 h-5 text-gray-500 flex-shrink-0 mt-0.5">
                                <path stroke-linecap="round" stroke-linejoin="round"
                                    d="M4.745 3A23.933 23.933 0 0 0 3 12c0 3.183.62 6.22 1.745 9M19.5 3c.967 2.78 1.5 5.817 1.5 9s-.533 6.22-1.5 9M8.25 8.885l1.444-.89a.75.75 0 0 1 1.105.402l2.402 7.206a.75.75 0 0 0 1.104.401l1.445-.889m-8.25.75.213.09a1.687 1.687 0 0 0 2.062-.617l4.50-6.676a1.688 1.688 0 0 1 2.062-.618l.213.09" />
                            </svg>
                            <span class="text-gray-500 ml-2">
                                <span class="font-medium">Variables:</span>
                                {% if prompt.variables %}
                                {{ prompt.variables|join(', ') }}
                                {% else %}
                                None
                                {% endif %}
                            </span>
                        </div>

                        {% if prompt.frontmatter.tags %}
                        <div class="flex flex-wrap gap-2">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                                stroke="currentColor" class="w-5 h-5 text-gray-400 flex-shrink-0 mt-0.5">
                                <path stroke-linecap="round" stroke-linejoin="round"
                                    d="M9.568 3H5.25A2.25 2.25 0 0 0 3 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.95 0 0 0 5.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 0 0 9.568 3Z" />
                                <path stroke-linecap="round" stroke-linejoin="round" d="M6 6h.008v.008H6V6Z" />
                            </svg>
                            <div class="flex flex-wrap gap-2 items-center">
                                <span class="text-base font-normal leading-tight text-gray-500"><span
                                        class="font-semibold">Tags:</span></span>
                                {% set tags_list = prompt.frontmatter.tags.split(', ') if prompt.frontmatter.tags is
                                string
                                else prompt.frontmatter.tags %}

                                {% for tag in tags_list %}
                                <span class="px-1 py-0.5 bg-base-100 text-blue-800 text-xs rounded-sm">
                                    {{ tag.strip() }}
                                </span>
                                {% endfor %}
                            </div>
                        </div>
                        {% endif %}
                    </div>
                </div>

                <div class="mt-4 pt-4 border-t border-gray-100">

                    <a href="{{ url_for('render_prompt', template_path=prompt.path) }}"
                        class="w-full bg-blue-700 hover:bg-blue-800 text-white font-medium rounded-lg text-sm px-5 py-2.5 inline-flex justify-center items-center transition-colors">
                        Use Template
                    </a>
                </div>
            </div>
            {% endfor %}
        </div>
    </div>
    {% endfor %}

    {% else %}
    <div class="text-center py-12">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
            class="w-16 h-16 text-gray-400 mx-auto mb-4">
            <path stroke-linecap="round" stroke-linejoin="round"
                d="M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m6.75 18l-3-3m0 0l-3 3m3-3v-1.5M6.75 7.5A1.5 1.5 0 015.25 6H2.25A2.25 2.25 0 000 8.25v.75a2.25 2.25 0 002.25 2.25h3A1.5 1.5 0 006.75 9.75V7.5z" />
        </svg>
        <h3 class="text-xl font-medium text-gray-900 mb-2">No Templates Found</h3>
        <p class="text-gray-500">Create some .jinja2 files in the prompts directory to get started.</p>
    </div>
    {% endif %}

</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    const promptCards = document.querySelectorAll('.prompt-card');
    const categorySections = document.querySelectorAll('.category-section');

    function filterPrompts() {
        const searchTerm = searchInput.value.toLowerCase().trim();

        if (searchTerm === '') {
            // Show all prompts and categories
            promptCards.forEach(card => {
                card.style.display = 'flex';
            });
            categorySections.forEach(section => {
                section.style.display = 'block';
            });
            return;
        }

        // Filter prompts
        categorySections.forEach(section => {
            let hasVisibleCards = false;
            const cardsInSection = section.querySelectorAll('.prompt-card');

            cardsInSection.forEach(card => {
                const name = card.dataset.name || '';
                const tags = card.dataset.tags || '';
                const description = card.dataset.description || '';

                const matches = name.includes(searchTerm) ||
                               tags.includes(searchTerm) ||
                               description.includes(searchTerm);

                if (matches) {
                    card.style.display = 'flex';
                    hasVisibleCards = true;
                } else {
                    card.style.display = 'none';
                }
            });

            // Hide category section if no cards are visible
            section.style.display = hasVisibleCards ? 'block' : 'none';
        });
    }

    // Add event listener for real-time search
    searchInput.addEventListener('input', filterPrompts);

    // Add event listener for Enter key
    searchInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            filterPrompts();
        }
    });
});
</script>

{% endblock content %}