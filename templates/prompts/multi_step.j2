{% extends "base.j2" %}
{% from "_macros.j2" import template_description, breadcrumb_navigation %}

{% block title %}{{ template_name|title }} - Step {{ current_step_index + 1 }}{% endblock %}

{% block content %}
<div class="container mx-auto mt-4 px-4">
    <!-- Breadcrumb -->
    {{ breadcrumb_navigation(template_info, template_name) }}

    <!-- Header -->
    <div class="flex items-center justify-between mb-6">
        <div class="flex items-center gap-4">
            <h1 class="text-3xl font-bold text-gray-900">{{ template_name|replace('_', ' ')|title }}</h1>
        </div>
    </div>

    <!-- Template Description -->
    {{ template_description(template_info) }}

    <!-- Progress Bar -->
    <div class="mb-8">
        <div class="flex justify-between items-center mb-2">
            <span class="text-sm font-medium text-gray-700">Progress</span>
            <span class="text-sm font-medium text-gray-700">{{ current_step_index + 1 }} of {{ total_steps }}</span>
        </div>
        <div class="w-full bg-gray-200 rounded-full h-2">
            <div class="bg-blue-600 h-2 rounded-full transition-all duration-300" 
                 style="width: {{ ((current_step_index + 1) / total_steps * 100)|round(1) }}%"></div>
        </div>
    </div>

    <!-- Step Navigation -->
    <div class="mb-6">
        <div class="flex flex-wrap gap-2">
            {% for step in template_info.steps %}
            {% set step_index = loop.index0 %}
            {% set is_current = step.id == current_step.id %}
            {% set is_completed = step.id in step_responses %}
            {% set is_accessible = step_index <= current_step_index or is_completed %}
            
            <a href="{{ url_for('render_prompt', template_path=template_path, step=step.id) if is_accessible else '#' }}" 
               class="flex items-center px-3 py-2 rounded-lg text-sm font-medium transition-colors
                      {% if is_current %}bg-blue-100 text-blue-800 border border-blue-300
                      {% elif is_completed %}bg-green-100 text-green-800 border border-green-300
                      {% elif is_accessible %}bg-gray-100 text-gray-700 border border-gray-300 hover:bg-gray-200
                      {% else %}bg-gray-50 text-gray-400 border border-gray-200 cursor-not-allowed{% endif %}">
                
                {% if is_completed %}
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 mr-1">
                    <path fill-rule="evenodd" d="M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z" clip-rule="evenodd" />
                </svg>
                {% endif %}
                
                <span class="mr-2">{{ step_index + 1 }}.</span>
                {{ step.title }}
            </a>
            {% endfor %}
        </div>
    </div>

    <!-- Main Content Area -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        
        <!-- Left Column: Step Form -->
        <div class="space-y-6">
            <div class="bg-white p-6 border border-gray-200 rounded-lg shadow-sm">
                <h2 class="text-xl font-semibold text-base-950 mb-4">{{ current_step.title }}</h2>
                <p class="text-gray-600 mb-6">{{ current_step.description }}</p>

                <!-- Step Variables Form -->
                <form method="POST" class="space-y-6">
                    {% if current_step.get('variables') %}
                    <div class="space-y-4">
                        <h3 class="text-lg font-medium text-gray-900">Step Variables</h3>
                        {% for variable in current_step.variables %}
                        <div>
                            <label for="{{ variable }}" class="block text-sm font-medium text-gray-700 mb-2">
                                {{ variable|replace('_', ' ')|title }}
                            </label>
                            <textarea name="{{ variable }}" id="{{ variable }}" rows="3"
                                      class="w-full p-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500"
                                      placeholder="Enter {{ variable|replace('_', ' ')|lower }}...">{{ step_responses.get(current_step.id, {}).get(variable, '') }}</textarea>
                        </div>
                        {% endfor %}
                        
                        <button type="submit" 
                                class="px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors">
                            Generate Prompt
                        </button>
                    </div>
                    {% endif %}

                    <!-- Generated Prompt -->
                    {% if rendered_step %}
                    <div class="space-y-4">
                        <h3 class="text-lg font-medium text-gray-900">Generated Prompt</h3>
                        <div class="relative">
                            <div class="p-4 bg-gray-50 rounded-lg border-2 border-dashed border-gray-300">
                                <pre class="whitespace-pre-wrap text-sm">{{ rendered_step }}</pre>
                            </div>
                            <button type="button" onclick="copyPrompt()" 
                                    class="absolute top-2 right-2 px-3 py-1 bg-blue-600 text-white text-xs rounded hover:bg-blue-700 transition-colors">
                                Copy Prompt
                            </button>
                        </div>
                        
                        <!-- LLM Output Input -->
                        <div>
                            <label for="llm_output" class="block text-sm font-medium text-gray-700 mb-2">
                                Paste LLM Output Here
                            </label>
                            <textarea name="llm_output" id="llm_output" rows="8"
                                      class="w-full p-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500"
                                      placeholder="Copy your prompt above, run it in your LLM, then paste the result here..."></textarea>
                        </div>
                        
                        <div class="flex justify-between">
                            {% if current_step_index > 0 %}
                            <a href="{{ url_for('render_prompt', template_path=template_path, step=template_info.steps[current_step_index - 1].id) }}" 
                               class="px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
                                Previous Step
                            </a>
                            {% else %}
                            <div></div>
                            {% endif %}
                            
                            <button type="submit" 
                                    class="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                                {% if current_step_index + 1 < total_steps %}Continue to Next Step{% else %}Complete Workflow{% endif %}
                            </button>
                        </div>
                    </div>
                    {% endif %}
                </form>
                
                {% if not rendered_step and current_step.get('variables') %}
                <div class="text-center text-gray-500 text-sm mt-4">
                    Fill in the variables above and click "Generate Prompt" to see the prompt for this step.
                </div>
                {% endif %}
            </div>
        </div>

        <!-- Right Column: Step Overview -->
        <div class="space-y-6">
            <div class="bg-white p-6 border border-gray-200 rounded-lg shadow-sm">
                <h3 class="text-lg font-semibold text-base-950 mb-4">Step Overview</h3>
                
                {% for step in template_info.steps %}
                {% set step_index = loop.index0 %}
                {% set is_current = step.id == current_step.id %}
                {% set is_completed = step.id in step_responses %}
                
                <div class="mb-4 pb-4 {% if not loop.last %}border-b border-gray-100{% endif %}">
                    <div class="flex items-start">
                        <div class="flex-shrink-0 w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium mr-3
                                    {% if is_current %}bg-blue-100 text-blue-800
                                    {% elif is_completed %}bg-green-100 text-green-800
                                    {% else %}bg-gray-100 text-gray-600{% endif %}">
                            {% if is_completed %}
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4">
                                <path fill-rule="evenodd" d="M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z" clip-rule="evenodd" />
                            </svg>
                            {% else %}
                            {{ step_index + 1 }}
                            {% endif %}
                        </div>
                        <div class="flex-1">
                            <h4 class="font-medium {% if is_current %}text-blue-800{% elif is_completed %}text-green-800{% else %}text-gray-900{% endif %}">
                                {{ step.title }}
                            </h4>
                            <p class="text-sm text-gray-600 mt-1">{{ step.description }}</p>
                            
                            {% if is_completed and step_responses.get(step.id) %}
                            <div class="mt-2 p-2 bg-gray-50 rounded text-xs text-gray-700">
                                <strong>Variables:</strong> 
                                {% for key, value in step_responses.get(step.id).items() %}
                                    {{ key }}: {{ (value[:50] + '...') if value|length > 50 else value }}{% if not loop.last %}, {% endif %}
                                {% endfor %}
                            </div>
                            {% endif %}
                        </div>
                    </div>
                </div>
                {% endfor %}
            </div>
        </div>
    </div>
</div>

<script>
function copyPrompt() {
    const promptText = document.querySelector('pre.whitespace-pre-wrap').textContent;
    
    if (navigator.clipboard && window.isSecureContext) {
        // Use clipboard API if available
        navigator.clipboard.writeText(promptText).then(() => {
            showCopySuccess();
        }).catch(() => {
            fallbackCopy(promptText);
        });
    } else {
        // Fallback for older browsers or non-HTTPS
        fallbackCopy(promptText);
    }
}

function fallbackCopy(text) {
    const textArea = document.createElement('textarea');
    textArea.value = text;
    textArea.style.position = 'fixed';
    textArea.style.top = '0';
    textArea.style.left = '-9999px';
    document.body.appendChild(textArea);
    textArea.select();
    
    try {
        document.execCommand('copy');
        showCopySuccess();
    } catch (err) {
        console.error('Failed to copy: ', err);
        alert('Failed to copy prompt. Please copy manually.');
    }
    
    document.body.removeChild(textArea);
}

function showCopySuccess() {
    const button = document.querySelector('button[onclick="copyPrompt()"]');
    const originalText = button.textContent;
    button.textContent = 'Copied!';
    button.classList.remove('bg-blue-600', 'hover:bg-blue-700');
    button.classList.add('bg-green-600', 'hover:bg-green-700');
    
    setTimeout(() => {
        button.textContent = originalText;
        button.classList.remove('bg-green-600', 'hover:bg-green-700');
        button.classList.add('bg-blue-600', 'hover:bg-blue-700');
    }, 2000);
}
</script>

<style>
.prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    color: #1f2937;
    font-weight: 600;
}
.prose p {
    margin-bottom: 1rem;
    line-height: 1.6;
}
.prose strong {
    font-weight: 600;
    color: #374151;
}
</style>
{% endblock content %}